services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - TZ=${TIMEZONE}
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped

  home-assistant:
    container_name: home-assistant
    image: ghcr.io/home-assistant/home-assistant:stable
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${HOME_ASSISTANT_CONFIGURATION_DIRECTORY}:/config
      - /etc/localtime:/etc/localtime:ro
    privileged: true
    network_mode: host

  momomo:
    image: alexmikhalochkin/momomo-worker:main
    container_name: momomo
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ${MOMOMO_CONFIGURATION_DIRECTORY}:/config
    command: --spring.config.location=/config/
    restart: unless-stopped
    depends_on:
      - mosquitto

  mosquitto:
    image: alexmikhalochkin/mosquitto:main
    container_name: mosquitto
    environment:
      - TZ=${TIMEZONE}
      - BRIDGE_ADDRESS=${AWS_IOT_BRIDGE_ADDRESS}
    ports:
      - "1883:1883"
    volumes:
      - ${AWS_IOT_CONFIGURATION_DIRECTORY}:/etc/mosquitto
    restart: unless-stopped

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    environment:
      - TZ=${TIMEZONE}
    command:
      - '--path.rootfs=/host'
    pid: host
    volumes:
      - '/:/host:ro,rslave'
    ports:
      - "9100:9100"
    restart: unless-stopped

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - VERSION=docker
    volumes:
      - ${PLEX_CONTENT_DIRECTORY}/library:/config
      - ${PLEX_CONTENT_DIRECTORY}/content:/content
    devices:
      - /dev/dri:/dev/dri
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json
    environment:
      - TZ=${TIMEZONE}
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_ROLLING_RESTART=true
      - WATCHTOWER_SCHEDULE=0 0 4 * * *
    restart: unless-stopped

  zigbee2mqtt:
    image: koenkk/zigbee2mqtt:latest
    container_name: zigbee2mqtt
    environment:
      - TZ=${TIMEZONE}
    ports:
      - "8080:8080"
    volumes:
      - ${ZIGBEE_2_MQTT_CONFIGURATION_DIRECTORY}:/app/data
      - /run/udev:/run/udev:ro
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    restart: unless-stopped
    depends_on:
      - mosquitto

volumes:
  grafana-data:
  prometheus-data:
